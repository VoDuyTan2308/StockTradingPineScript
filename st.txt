// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © tankeangnam

//@version=4
study("Supertrend", overlay = true, format=format.price, precision=2)

Periods = input(title="ATR Period", type=input.integer, defval=10)
src = input(hl2, title="Source")
Multiplier = input(title="ATR Multiplier", type=input.float, step=0.1, defval=3.0)
changeATR= input(title="Change ATR Calculation Method ?", type=input.bool, defval=true)
showsignals = input(title="Show Buy/Sell Signals ?", type=input.bool, defval=true)
highlighting = input(title="Highlighter On/Off ?", type=input.bool, defval=true)
from = input(defval = timestamp("01 Jan 2015 9:30 +0000"), title = "From", type = input.time)
atr2 = sma(tr, Periods)
atr= changeATR ? atr(Periods) : atr2
up=src-(Multiplier*atr)
up1 = nz(up[1],up)
up := close[1] > up1 ? max(up,up1) : up
dn=src+(Multiplier*atr)
dn1 = nz(dn[1], dn)
dn := close[1] < dn1 ? min(dn, dn1) : dn
trend = 1
trend := nz(trend[1], trend)
trend := trend == -1 and close > dn1 ? 1 : trend == 1 and close < up1 ? -1 : trend
upPlot = plot(trend == 1 ? up : na, title="Up Trend", style=plot.style_linebr, linewidth=2, color=color.green)
buySignal = trend == 1 and trend[1] == -1
plotshape(buySignal ? up : na, title="UpTrend Begins", location=location.absolute, style=shape.circle, size=size.tiny, color=color.green, transp=0)
plotshape(buySignal and showsignals ? up : na, title="Buy", text="Buy", location=location.absolute, style=shape.labelup, size=size.tiny, color=color.green, textcolor=color.white, transp=0)
dnPlot = plot(trend == 1 ? na : dn, title="Down Trend", style=plot.style_linebr, linewidth=2, color=color.red)
sellSignal = trend == -1 and trend[1] == 1
plotshape(sellSignal ? dn : na, title="DownTrend Begins", location=location.absolute, style=shape.circle, size=size.tiny, color=color.red, transp=0)
plotshape(sellSignal and showsignals ? dn : na, title="Sell", text="Sell", location=location.absolute, style=shape.labeldown, size=size.tiny, color=color.red, textcolor=color.white, transp=0)
mPlot = plot(ohlc4, title="", style=plot.style_circles, linewidth=0)
longFillColor = highlighting ? (trend == 1 ? color.green : color.white) : color.white
shortFillColor = highlighting ? (trend == -1 ? color.red : color.white) : color.white
fill(mPlot, upPlot, title="UpTrend Highligter", color=longFillColor)
fill(mPlot, dnPlot, title="DownTrend Highligter", color=shortFillColor)
alertcondition(buySignal, title="SuperTrend Buy", message="SuperTrend Buy!")
alertcondition(sellSignal, title="SuperTrend Sell", message="SuperTrend Sell!")
changeCond = trend != trend[1]
alertcondition(changeCond, title="SuperTrend Direction Change", message="SuperTrend has changed direction!")

plotshape(buySignal ? low : na, style=shape.triangleup, location=location.absolute, color=color.green, size=size.tiny)
// code compute probability & expectation
t = input(10, title="T+", minval = 0, maxval = 30)
if(time > from)
    var count = 0
    var winCount = 0
    var float totalProfit = 0
    var float winPercent = 0
    var float expect = 0
    var float _expect = 0
    var float totalPercentExpect = 0
    var c = false
    var countT=0
    var float priceBuy = 0
    if c == true
        countT:= countT + 1
    if buySignal
        c := true
        count := count + 1
        priceBuy := hl2
        
    if(countT == t)
        profit = hl2 - priceBuy
        ex = profit/priceBuy*100
        if(profit > 0)
            winCount := winCount + 1
        totalProfit := totalProfit + profit
        totalPercentExpect := totalPercentExpect + ex
        countT:= 0
        c:=false
    winPercent := winCount/count * 100
    expect := totalProfit/count
    _expect := totalPercentExpect/count
    txt = "ST _  N: " + tostring(count) + ", P(win|t=" + tostring(t) + "): " + tostring(round( winPercent * 100) / 100) + "%, E: " + tostring(round(expect * 100) / 100) + "đ (" + tostring(round(_expect * 100) / 100) + "%)"
    if barstate.islast
        l = label.new(time + (time-time[39]), 0.9*low, 
          txt,
          color=color.green,
          textcolor=color.black,
          style=label.style_label_up,
          xloc=xloc.bar_time,
          size=size.normal)
